name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test-linux:
    name: Test Linux
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy, rustfmt

    - name: Install PAM development libraries
      run: |
        sudo apt-get update
        sudo apt-get install -y libpam0g-dev libclang-dev llvm llvm-dev clang
        
    - name: Configure LLVM paths
      run: |
        LLVM_VERSION=$(llvm-config --version | cut -d. -f1)
        echo "LIBCLANG_PATH=/usr/lib/llvm-${LLVM_VERSION}/lib" >> $GITHUB_ENV
        echo "LLVM_CONFIG_PATH=$(which llvm-config)" >> $GITHUB_ENV

    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Check formatting
      run: cargo fmt -- --check
    
    - name: Run clippy
      run: cargo clippy -- -D warnings
    
    - name: Build
      run: cargo build --verbose
    
    - name: Run tests
      run: cargo test --verbose

  test-freebsd:
    name: Test FreeBSD
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Test in FreeBSD
      uses: vmactions/freebsd-vm@v1
      with:
        release: "14.3"
        usesh: true
        prepare: |
          pkg install -y curl llvm-devel git
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          . ~/.cargo/env
          rustup component add clippy rustfmt
        run: |
          cc -v
          c++ -v
          . ~/.cargo/env
          export CC=clang
          cargo fmt -- --check
          cargo clippy -- -D warnings
          cargo build --verbose
          cargo test --verbose
          cargo test --verbose --features generate-bindings